Index: testUI/RazorShared/Pages/Login.razor
===================================================================
diff --git a/testUI/RazorShared/Pages/Login.razor b/testUI/RazorShared/Pages/Login.razor
deleted file mode 100644
--- a/testUI/RazorShared/Pages/Login.razor	(revision 3993df6209af93a4a3cea57810ccb8f9ebc84b3a)
+++ /dev/null	(revision 3993df6209af93a4a3cea57810ccb8f9ebc84b3a)
@@ -1,6 +0,0 @@
-@page "/login2"
-@page "/bff/login"
-
-@inherits JMCore.Blazor.JMPageBase
-
-<p>Redirecting to login page.</p>
\ No newline at end of file
Index: testUI/RazorShared/Pages/Login.razor.cs
===================================================================
diff --git a/testUI/RazorShared/Pages/Login.razor.cs b/testUI/RazorShared/Pages/Login.razor.cs
deleted file mode 100644
--- a/testUI/RazorShared/Pages/Login.razor.cs	(revision 3993df6209af93a4a3cea57810ccb8f9ebc84b3a)
+++ /dev/null	(revision 3993df6209af93a4a3cea57810ccb8f9ebc84b3a)
@@ -1,9 +0,0 @@
-using JMCore.Blazor;
-
-namespace JMCoreTest.Blazor.RazorShared.Pages
-{
-    public partial class Login : JMPageBase
-    {
-    
-    }
-}
Index: testUI/Shared/Models/TokenData.cs
===================================================================
diff --git a/testUI/Shared/Models/TokenData.cs b/testUI/Shared/Models/TokenData.cs
deleted file mode 100644
--- a/testUI/Shared/Models/TokenData.cs	(revision 3993df6209af93a4a3cea57810ccb8f9ebc84b3a)
+++ /dev/null	(revision 3993df6209af93a4a3cea57810ccb8f9ebc84b3a)
@@ -1,7 +0,0 @@
-namespace JMCoreTest.Blazor.Shared.Models;
-
-public class TokenData
-{
-    public string AccessToken { get; set; }
-    public string RefreshToken { get; set; }
-}
\ No newline at end of file
Index: testUI/WASM/appsettings.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"ConnectionStrings\": {\r\n    \"DefaultConnection\": \"Data Source=(localdb)\\\\MSSQLLocalDB;Initial Catalog=JMCoreTestWebAPI;Integrated Security=True\"\r\n  },\r\n  \"Identity\": {\r\n    \"Authority\": \"https://localhost:5001\"\r\n  },\r\n  \"Logging\": {\r\n    \"LogLevel\": {\r\n      \"Default\": \"Information\",\r\n      \"Microsoft.AspNetCore\": \"Warning\"\r\n    }\r\n  },\r\n  \"AllowedHosts\": \"*\"\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/testUI/WASM/appsettings.json b/testUI/WASM/appsettings.json
--- a/testUI/WASM/appsettings.json	(revision 3993df6209af93a4a3cea57810ccb8f9ebc84b3a)
+++ b/testUI/WASM/appsettings.json	(date 1691647461649)
@@ -3,7 +3,7 @@
     "DefaultConnection": "Data Source=(localdb)\\MSSQLLocalDB;Initial Catalog=JMCoreTestWebAPI;Integrated Security=True"
   },
   "Identity": {
-    "Authority": "https://localhost:5001"
+    "Authority": "https://localhost:1001"
   },
   "Logging": {
     "LogLevel": {
Index: .idea/.idea.JMCore.Blazor/.idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoGeneratedRunConfigurationManager\">\r\n    <projectFile pubXmlPath=\"../JMCore/src/JMCore.Resources/Properties/PublishProfiles/FolderProfile.pubxml\">../JMCore/src/JMCore.Resources/JMCore.Resources.csproj</projectFile>\r\n    <projectFile pubXmlPath=\"../JMCore/src/JMCore.Server/Properties/PublishProfiles/FolderProfile.pubxml\">../JMCore/src/JMCore.Server/JMCore.Server.csproj</projectFile>\r\n    <projectFile pubXmlPath=\"../JMCore/src/JMCore/Properties/PublishProfiles/FolderProfile.pubxml\">../JMCore/src/JMCore/JMCore.csproj</projectFile>\r\n    <projectFile profileName=\"JMCore.Blazor.Client\">src/JMCore.Blazor.Client/JMCore.Blazor.Client.csproj</projectFile>\r\n    <projectFile profileName=\"IIS Express\">testUI/Client/JMCoreTest.Blazor.Client.csproj</projectFile>\r\n    <projectFile profileName=\"JMCore.Blazor\">testUI/Client/JMCoreTest.Blazor.Client.csproj</projectFile>\r\n    <projectFile profileName=\"IIS Express\">testUI/Server/JMCoreTest.Blazor.Server.csproj</projectFile>\r\n    <projectFile profileName=\"JMCore.Blazor.Server\">testUI/Server/JMCoreTest.Blazor.Server.csproj</projectFile>\r\n    <projectFile profileName=\"IIS Express\">testUI/WASM/JMCoreTest.Blazor.ServerWASM.csproj</projectFile>\r\n    <projectFile profileName=\"JMCoreTest.Blazor.WASM\">testUI/WASM/JMCoreTest.Blazor.ServerWASM.csproj</projectFile>\r\n  </component>\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"3622c06b-a6a1-4306-b5d7-4f8ee2b71efd\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/.idea.JMCore.Blazor/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/.idea.JMCore.Blazor/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/JMCore.Blazor/Shared/TopBar/CultureChooser.razor\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/JMCore.Blazor/Shared/Header/CultureChooser.razor\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/JMCore.Blazor/Shared/TopBar/CultureChooser.razor.cs\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/JMCore.Blazor/Shared/Header/CultureChooser.razor.cs\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/JMCore.Blazor/Shared/TopBar/HeaderRightPart.razor\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/JMCore.Blazor/Shared/Header/HeaderRightPart.razor\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/JMCore.Blazor/Shared/TopBar/HeaderRightPart.razor.cs\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/JMCore.Blazor/Shared/Header/HeaderRightPart.razor.cs\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/JMCore.Blazor/Shared/TopBar/Login/CurrentSession.razor\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/testUI/RazorShared/Shared/CurrentSession.razor\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/JMCore.Blazor/Shared/TopBar/Login/LoginDisplay.razor\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/JMCore.Blazor/Shared/Header/Login/LogInOut.razor\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/JMCore.Blazor/Shared/TopBar/Login/LoginDisplay.razor.cs\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/JMCore.Blazor/Shared/Header/Login/LogInOut.razor.cs\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/JMCore.Blazor/Shared/TopBar/Login/UserInfo.razor\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/JMCore.Blazor/Shared/Header/Login/UserInfo.razor\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/JMCore.Blazor/Shared/TopBar/Login/UserInfoItem/Profile.razor\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/JMCore.Blazor/Shared/Header/Login/UserInfoItem/Profile.razor\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/test/JMCore.Blazor.Tests/SharedT/ComponentsT/TopBarT/CultureChooserT.cs\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/test/JMCore.Blazor.Tests/SharedT/ComponentsT/TopBarT/CultureChooserT.cs\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/testUI/RazorShared/Pages/Index.razor\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/testUI/RazorShared/Pages/Index.razor\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/testUI/RazorShared/Shared/MainLayout.razor\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/testUI/RazorShared/Shared/MainLayout.razor\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/testUI/RazorShared/_Imports.razor\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/testUI/RazorShared/_Imports.razor\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MetaFilesCheckinStateConfiguration\" checkMetaFiles=\"true\" />\r\n  <component name=\"ProjectId\" id=\"2TmPT0O5vhb3aQiQkjTu7UOger8\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  },\r\n  \"keyToStringList\": {\r\n    \"rider.external.source.directories\": [\r\n      \"C:\\\\Users\\\\jirim\\\\AppData\\\\Roaming\\\\JetBrains\\\\Rider2023.1\\\\resharper-host\\\\DecompilerCache\",\r\n      \"C:\\\\Users\\\\jirim\\\\AppData\\\\Roaming\\\\JetBrains\\\\Rider2023.1\\\\resharper-host\\\\SourcesCache\",\r\n      \"C:\\\\Users\\\\jirim\\\\AppData\\\\Local\\\\Symbols\\\\src\"\r\n    ]\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\" selected=\".NET Launch Settings Profile.JMCoreTest.Blazor.ServerWASM: JMCoreTest.Blazor.WASM\">\r\n    <configuration name=\"JMCore: FolderProfile\" type=\"DotNetMsBuildPublish\" factoryName=\"Publish to IIS\">\r\n      <riderPublish publish_profile=\"FolderProfile.pubxml\" pubxml_path=\"$PROJECT_DIR$/../JMCore/src/JMCore/Properties/PublishProfiles/FolderProfile.pubxml\" uuid_high=\"-1745457533154867952\" uuid_low=\"-8715967073302261457\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"JMCore.Resources: FolderProfile\" type=\"DotNetMsBuildPublish\" factoryName=\"Publish to IIS\">\r\n      <riderPublish publish_profile=\"FolderProfile.pubxml\" pubxml_path=\"$PROJECT_DIR$/../JMCore/src/JMCore.Resources/Properties/PublishProfiles/FolderProfile.pubxml\" uuid_high=\"3890974047701910265\" uuid_low=\"-4707438665002981286\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"JMCore.Server: FolderProfile\" type=\"DotNetMsBuildPublish\" factoryName=\"Publish to IIS\">\r\n      <riderPublish publish_profile=\"FolderProfile.pubxml\" pubxml_path=\"$PROJECT_DIR$/../JMCore/src/JMCore.Server/Properties/PublishProfiles/FolderProfile.pubxml\" uuid_high=\"1815811607192882313\" uuid_low=\"-7351912940946402669\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"JMCoreTest.Blazor.Client: IIS Express\" type=\"LaunchSettings\" factoryName=\".NET Launch Settings Profile\">\r\n      <option name=\"LAUNCH_PROFILE_PROJECT_FILE_PATH\" value=\"$PROJECT_DIR$/testUI/Client/JMCoreTest.Blazor.Client.csproj\" />\r\n      <option name=\"LAUNCH_PROFILE_TFM\" value=\"net6.0\" />\r\n      <option name=\"LAUNCH_PROFILE_NAME\" value=\"IIS Express\" />\r\n      <option name=\"USE_EXTERNAL_CONSOLE\" value=\"0\" />\r\n      <option name=\"USE_MONO\" value=\"0\" />\r\n      <option name=\"RUNTIME_ARGUMENTS\" value=\"\" />\r\n      <option name=\"GENERATE_APPLICATIONHOST_CONFIG\" value=\"1\" />\r\n      <option name=\"SHOW_IIS_EXPRESS_OUTPUT\" value=\"0\" />\r\n      <option name=\"SEND_DEBUG_REQUEST\" value=\"1\" />\r\n      <option name=\"ADDITIONAL_IIS_EXPRESS_ARGUMENTS\" value=\"\" />\r\n      <method v=\"2\">\r\n        <option name=\"Build\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"JMCoreTest.Blazor.Client: JMCore.Blazor\" type=\"LaunchSettings\" factoryName=\".NET Launch Settings Profile\">\r\n      <option name=\"LAUNCH_PROFILE_PROJECT_FILE_PATH\" value=\"$PROJECT_DIR$/testUI/Client/JMCoreTest.Blazor.Client.csproj\" />\r\n      <option name=\"LAUNCH_PROFILE_TFM\" value=\"net6.0\" />\r\n      <option name=\"LAUNCH_PROFILE_NAME\" value=\"JMCore.Blazor\" />\r\n      <option name=\"USE_EXTERNAL_CONSOLE\" value=\"0\" />\r\n      <option name=\"USE_MONO\" value=\"0\" />\r\n      <option name=\"RUNTIME_ARGUMENTS\" value=\"\" />\r\n      <option name=\"GENERATE_APPLICATIONHOST_CONFIG\" value=\"1\" />\r\n      <option name=\"SHOW_IIS_EXPRESS_OUTPUT\" value=\"0\" />\r\n      <option name=\"SEND_DEBUG_REQUEST\" value=\"1\" />\r\n      <option name=\"ADDITIONAL_IIS_EXPRESS_ARGUMENTS\" value=\"\" />\r\n      <method v=\"2\">\r\n        <option name=\"Build\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"JMCoreTest.Blazor.ServerWASM: IIS Express\" type=\"LaunchSettings\" factoryName=\".NET Launch Settings Profile\">\r\n      <option name=\"LAUNCH_PROFILE_PROJECT_FILE_PATH\" value=\"$PROJECT_DIR$/testUI/WASM/JMCoreTest.Blazor.ServerWASM.csproj\" />\r\n      <option name=\"LAUNCH_PROFILE_TFM\" value=\"net6.0\" />\r\n      <option name=\"LAUNCH_PROFILE_NAME\" value=\"IIS Express\" />\r\n      <option name=\"USE_EXTERNAL_CONSOLE\" value=\"0\" />\r\n      <option name=\"USE_MONO\" value=\"0\" />\r\n      <option name=\"RUNTIME_ARGUMENTS\" value=\"\" />\r\n      <option name=\"GENERATE_APPLICATIONHOST_CONFIG\" value=\"1\" />\r\n      <option name=\"SHOW_IIS_EXPRESS_OUTPUT\" value=\"0\" />\r\n      <option name=\"SEND_DEBUG_REQUEST\" value=\"1\" />\r\n      <option name=\"ADDITIONAL_IIS_EXPRESS_ARGUMENTS\" value=\"\" />\r\n      <method v=\"2\">\r\n        <option name=\"Build\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"JMCoreTest.Blazor.ServerWASM: JMCoreTest.Blazor.WASM\" type=\"LaunchSettings\" factoryName=\".NET Launch Settings Profile\">\r\n      <option name=\"LAUNCH_PROFILE_PROJECT_FILE_PATH\" value=\"$PROJECT_DIR$/testUI/WASM/JMCoreTest.Blazor.ServerWASM.csproj\" />\r\n      <option name=\"LAUNCH_PROFILE_TFM\" value=\"net6.0\" />\r\n      <option name=\"LAUNCH_PROFILE_NAME\" value=\"JMCoreTest.Blazor.WASM\" />\r\n      <option name=\"USE_EXTERNAL_CONSOLE\" value=\"0\" />\r\n      <option name=\"USE_MONO\" value=\"0\" />\r\n      <option name=\"RUNTIME_ARGUMENTS\" value=\"\" />\r\n      <option name=\"GENERATE_APPLICATIONHOST_CONFIG\" value=\"1\" />\r\n      <option name=\"SHOW_IIS_EXPRESS_OUTPUT\" value=\"0\" />\r\n      <option name=\"SEND_DEBUG_REQUEST\" value=\"1\" />\r\n      <option name=\"ADDITIONAL_IIS_EXPRESS_ARGUMENTS\" value=\"\" />\r\n      <method v=\"2\">\r\n        <option name=\"Build\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"JMCoreTest.Blazor.Server: IIS Express\" type=\"LaunchSettings\" factoryName=\".NET Launch Settings Profile\">\r\n      <option name=\"LAUNCH_PROFILE_PROJECT_FILE_PATH\" value=\"$PROJECT_DIR$/testUI/Server/JMCoreTest.Blazor.Server.csproj\" />\r\n      <option name=\"LAUNCH_PROFILE_TFM\" value=\"net6.0\" />\r\n      <option name=\"LAUNCH_PROFILE_NAME\" value=\"IIS Express\" />\r\n      <option name=\"USE_EXTERNAL_CONSOLE\" value=\"0\" />\r\n      <option name=\"USE_MONO\" value=\"0\" />\r\n      <option name=\"RUNTIME_ARGUMENTS\" value=\"\" />\r\n      <option name=\"GENERATE_APPLICATIONHOST_CONFIG\" value=\"1\" />\r\n      <option name=\"SHOW_IIS_EXPRESS_OUTPUT\" value=\"0\" />\r\n      <option name=\"SEND_DEBUG_REQUEST\" value=\"1\" />\r\n      <option name=\"ADDITIONAL_IIS_EXPRESS_ARGUMENTS\" value=\"\" />\r\n      <method v=\"2\">\r\n        <option name=\"Build\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"JMCoreTest.Blazor.Server: JMCore.Blazor.Server\" type=\"LaunchSettings\" factoryName=\".NET Launch Settings Profile\">\r\n      <option name=\"LAUNCH_PROFILE_PROJECT_FILE_PATH\" value=\"$PROJECT_DIR$/testUI/Server/JMCoreTest.Blazor.Server.csproj\" />\r\n      <option name=\"LAUNCH_PROFILE_TFM\" value=\"net6.0\" />\r\n      <option name=\"LAUNCH_PROFILE_NAME\" value=\"JMCore.Blazor.Server\" />\r\n      <option name=\"USE_EXTERNAL_CONSOLE\" value=\"0\" />\r\n      <option name=\"USE_MONO\" value=\"0\" />\r\n      <option name=\"RUNTIME_ARGUMENTS\" value=\"\" />\r\n      <option name=\"GENERATE_APPLICATIONHOST_CONFIG\" value=\"1\" />\r\n      <option name=\"SHOW_IIS_EXPRESS_OUTPUT\" value=\"0\" />\r\n      <option name=\"SEND_DEBUG_REQUEST\" value=\"1\" />\r\n      <option name=\"ADDITIONAL_IIS_EXPRESS_ARGUMENTS\" value=\"\" />\r\n      <method v=\"2\">\r\n        <option name=\"Build\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"JMCore.Blazor.Client\" type=\"LaunchSettings\" factoryName=\".NET Launch Settings Profile\">\r\n      <option name=\"LAUNCH_PROFILE_PROJECT_FILE_PATH\" value=\"$PROJECT_DIR$/src/JMCore.Blazor.Client/JMCore.Blazor.Client.csproj\" />\r\n      <option name=\"LAUNCH_PROFILE_TFM\" value=\"net6.0\" />\r\n      <option name=\"LAUNCH_PROFILE_NAME\" value=\"JMCore.Blazor.Client\" />\r\n      <option name=\"USE_EXTERNAL_CONSOLE\" value=\"0\" />\r\n      <option name=\"USE_MONO\" value=\"0\" />\r\n      <option name=\"RUNTIME_ARGUMENTS\" value=\"\" />\r\n      <option name=\"GENERATE_APPLICATIONHOST_CONFIG\" value=\"1\" />\r\n      <option name=\"SHOW_IIS_EXPRESS_OUTPUT\" value=\"0\" />\r\n      <option name=\"SEND_DEBUG_REQUEST\" value=\"1\" />\r\n      <option name=\"ADDITIONAL_IIS_EXPRESS_ARGUMENTS\" value=\"\" />\r\n      <method v=\"2\">\r\n        <option name=\"Build\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"3622c06b-a6a1-4306-b5d7-4f8ee2b71efd\" name=\"Changes\" comment=\"\" />\r\n      <created>1691645293165</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1691645293165</updated>\r\n      <workItem from=\"1691645294454\" duration=\"1503000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"UnityCheckinConfiguration\" checkUnsavedScenes=\"true\" />\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"CLEAR_INITIAL_COMMIT_MESSAGE\" value=\"true\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.idea.JMCore.Blazor/.idea/workspace.xml b/.idea/.idea.JMCore.Blazor/.idea/workspace.xml
--- a/.idea/.idea.JMCore.Blazor/.idea/workspace.xml	(revision 3993df6209af93a4a3cea57810ccb8f9ebc84b3a)
+++ b/.idea/.idea.JMCore.Blazor/.idea/workspace.xml	(date 1691651704535)
@@ -16,27 +16,37 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="3622c06b-a6a1-4306-b5d7-4f8ee2b71efd" name="Changes" comment="">
+    <list default="true" id="3622c06b-a6a1-4306-b5d7-4f8ee2b71efd" name="Changes" comment="Refactor - topbar on header">
+      <change afterPath="$PROJECT_DIR$/testUI/Client/TestAuthenticationStateProvider.cs" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/testUI/ServerShared/ApiControllers/AccountController.cs" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/.idea.JMCore.Blazor/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/.idea.JMCore.Blazor/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/JMCore.Blazor/Shared/TopBar/CultureChooser.razor" beforeDir="false" afterPath="$PROJECT_DIR$/src/JMCore.Blazor/Shared/Header/CultureChooser.razor" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/JMCore.Blazor/Shared/TopBar/CultureChooser.razor.cs" beforeDir="false" afterPath="$PROJECT_DIR$/src/JMCore.Blazor/Shared/Header/CultureChooser.razor.cs" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/JMCore.Blazor/Shared/TopBar/HeaderRightPart.razor" beforeDir="false" afterPath="$PROJECT_DIR$/src/JMCore.Blazor/Shared/Header/HeaderRightPart.razor" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/JMCore.Blazor/Shared/TopBar/HeaderRightPart.razor.cs" beforeDir="false" afterPath="$PROJECT_DIR$/src/JMCore.Blazor/Shared/Header/HeaderRightPart.razor.cs" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/JMCore.Blazor/Shared/TopBar/Login/CurrentSession.razor" beforeDir="false" afterPath="$PROJECT_DIR$/testUI/RazorShared/Shared/CurrentSession.razor" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/JMCore.Blazor/Shared/TopBar/Login/LoginDisplay.razor" beforeDir="false" afterPath="$PROJECT_DIR$/src/JMCore.Blazor/Shared/Header/Login/LogInOut.razor" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/JMCore.Blazor/Shared/TopBar/Login/LoginDisplay.razor.cs" beforeDir="false" afterPath="$PROJECT_DIR$/src/JMCore.Blazor/Shared/Header/Login/LogInOut.razor.cs" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/JMCore.Blazor/Shared/TopBar/Login/UserInfo.razor" beforeDir="false" afterPath="$PROJECT_DIR$/src/JMCore.Blazor/Shared/Header/Login/UserInfo.razor" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/JMCore.Blazor/Shared/TopBar/Login/UserInfoItem/Profile.razor" beforeDir="false" afterPath="$PROJECT_DIR$/src/JMCore.Blazor/Shared/Header/Login/UserInfoItem/Profile.razor" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/test/JMCore.Blazor.Tests/SharedT/ComponentsT/TopBarT/CultureChooserT.cs" beforeDir="false" afterPath="$PROJECT_DIR$/test/JMCore.Blazor.Tests/SharedT/ComponentsT/TopBarT/CultureChooserT.cs" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/testUI/RazorShared/Pages/Index.razor" beforeDir="false" afterPath="$PROJECT_DIR$/testUI/RazorShared/Pages/Index.razor" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/testUI/RazorShared/Shared/MainLayout.razor" beforeDir="false" afterPath="$PROJECT_DIR$/testUI/RazorShared/Shared/MainLayout.razor" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/testUI/RazorShared/_Imports.razor" beforeDir="false" afterPath="$PROJECT_DIR$/testUI/RazorShared/_Imports.razor" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/JMCore.Blazor.Client/BFF/BffAuthenticationStateProvider.cs" beforeDir="false" afterPath="$PROJECT_DIR$/src/JMCore.Blazor.Client/BFF/BffAuthenticationStateProvider.cs" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/testUI/Client/JMCoreTest.Blazor.Client.csproj" beforeDir="false" afterPath="$PROJECT_DIR$/testUI/Client/JMCoreTest.Blazor.Client.csproj" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/testUI/Client/Program.cs" beforeDir="false" afterPath="$PROJECT_DIR$/testUI/Client/Program.cs" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/testUI/RazorShared/Pages/Login.razor" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/testUI/RazorShared/Pages/Login.razor.cs" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/testUI/ServerShared/ApiControllers/DataController.cs" beforeDir="false" afterPath="$PROJECT_DIR$/testUI/ServerShared/ApiControllers/DataController.cs" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/testUI/Shared/JMCoreTest.Blazor.Shared.csproj" beforeDir="false" afterPath="$PROJECT_DIR$/testUI/Shared/JMCoreTest.Blazor.Shared.csproj" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/testUI/Shared/Models/DataGridData.cs" beforeDir="false" afterPath="$PROJECT_DIR$/testUI/Shared/Models/DataGridData.cs" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/testUI/Shared/Models/TokenData.cs" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/testUI/WASM/Startup.cs" beforeDir="false" afterPath="$PROJECT_DIR$/testUI/WASM/Startup.cs" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/testUI/WASM/appsettings.json" beforeDir="false" afterPath="$PROJECT_DIR$/testUI/WASM/appsettings.json" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
     <option name="LAST_RESOLUTION" value="IGNORE" />
   </component>
+  <component name="Git.Settings">
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+  </component>
+  <component name="HighlightingSettingsPerFile">
+    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/9a3e639d94986eddab1a9a78d348cfaa4f59bc1e3a8cbc3bd46e01ed6f2/Timer.cs" root0="SKIP_HIGHLIGHTING" />
+    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/b97b55ba9c75e7c55eb27ae46d6b3f49841414c5142a69449193f7e65153/AuthenticationStateProvider.cs" root0="SKIP_HIGHLIGHTING" />
+    <setting file="mock://D:/MTest/JMCore.Blazor/testUI/RazorShared/_Imports.razor" root0="SKIP_HIGHLIGHTING" root1="FORCE_HIGHLIGHTING" root2="FORCE_HIGHLIGHTING" />
+    <setting file="mock://D:/MTest/JMCore.Blazor/testUI/WASM/Startup.cs" root0="SKIP_HIGHLIGHTING" />
+    <setting file="mock://D:/MTest/JMCore.Blazor/testUI/WASM/Startup.cs" root0="SKIP_HIGHLIGHTING" />
+  </component>
   <component name="MarkdownSettingsMigration">
     <option name="stateVersion" value="1" />
   </component>
@@ -51,6 +61,7 @@
     "RunOnceActivity.OpenProjectViewOnStart": "true",
     "RunOnceActivity.ShowReadmeOnStart": "true",
     "WebServerToolWindowFactoryState": "false",
+    "git-widget-placeholder": "main",
     "node.js.detected.package.eslint": "true",
     "node.js.detected.package.tslint": "true",
     "node.js.selected.package.eslint": "(autodetect)",
@@ -192,8 +203,17 @@
       <option name="number" value="Default" />
       <option name="presentableId" value="Default" />
       <updated>1691645293165</updated>
-      <workItem from="1691645294454" duration="1503000" />
+      <workItem from="1691645294454" duration="6341000" />
     </task>
+    <task id="LOCAL-00001" summary="Refactor - topbar on header">
+      <option name="closed" value="true" />
+      <created>1691647366512</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1691647366512</updated>
+    </task>
+    <option name="localTasksCounter" value="2" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -202,5 +222,7 @@
   <component name="UnityCheckinConfiguration" checkUnsavedScenes="true" />
   <component name="VcsManagerConfiguration">
     <option name="CLEAR_INITIAL_COMMIT_MESSAGE" value="true" />
+    <MESSAGE value="Refactor - topbar on header" />
+    <option name="LAST_COMMIT_MESSAGE" value="Refactor - topbar on header" />
   </component>
 </project>
\ No newline at end of file
Index: testUI/Shared/Models/DataGridData.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>namespace JMCoreTest.Blazor.Shared.Models;\r\n\r\npublic class DataGridData\r\n{\r\n    public int Id { get; set; }\r\n    public string Title { get; set; }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/testUI/Shared/Models/DataGridData.cs b/testUI/Shared/Models/DataGridData.cs
--- a/testUI/Shared/Models/DataGridData.cs	(revision 3993df6209af93a4a3cea57810ccb8f9ebc84b3a)
+++ b/testUI/Shared/Models/DataGridData.cs	(date 1691651704125)
@@ -1,7 +1,21 @@
+using System.Collections.Generic;
+using JMCore.Models.BaseRR;
+using JMCore.Server.Models.BaseRR;
+
 namespace JMCoreTest.Blazor.Shared.Models;
 
 public class DataGridData
 {
     public int Id { get; set; }
     public string Title { get; set; }
+}
+
+public class DataGridResponse : ApiResponseBase<DataGridResponseDto>
+{
+    public IEnumerable<DataGridData> GridData { get; set; }
+}
+
+public class DataGridResponseDto : ApiResponseBaseDto
+{
+    public IEnumerable<DataGridData> GridData1 { get; set; }
 }
\ No newline at end of file
Index: testUI/ServerShared/ApiControllers/DataController.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using JMCore.Server.Controllers;\r\nusing JMCoreTest.Blazor.Shared.Models;\r\nusing Microsoft.AspNetCore.Authentication;\r\nusing Microsoft.AspNetCore.Authorization;\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing Telerik.DataSource.Extensions;\r\n\r\nnamespace JMCoreTest.Blazor.ServerShared.ApiControllers;\r\n\r\n[ApiController]\r\n[Route(\"api\")]\r\npublic class DataController : BaseController<DataController>\r\n{\r\n    [HttpGet]\r\n    [Route(\"griddata\")]\r\n    //[AllowAnonymous]\r\n    [Authorize]\r\n    public IEnumerable<DataGridData> GetData()\r\n    {\r\n        \r\n        return Enumerable.Range(1, 5).Select(index => new DataGridData()\r\n            {\r\n                Id = index,\r\n                Title = $\"title{index}\"\r\n            })\r\n            .ToArray();\r\n    }\r\n\r\n    [HttpGet]\r\n    [Route(\"token\")]\r\n    //[AllowAnonymous]\r\n    [Authorize]\r\n    public async Task<IDictionary<string, string?>> GetToken()\r\n    {\r\n        var aa = await HttpContext.AuthenticateAsync();\r\n        var bb = aa.Properties?.Items ?? new Dictionary<string, string?>();\r\n\r\n        return bb;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/testUI/ServerShared/ApiControllers/DataController.cs b/testUI/ServerShared/ApiControllers/DataController.cs
--- a/testUI/ServerShared/ApiControllers/DataController.cs	(revision 3993df6209af93a4a3cea57810ccb8f9ebc84b3a)
+++ b/testUI/ServerShared/ApiControllers/DataController.cs	(date 1691651704133)
@@ -15,15 +15,22 @@
     [Route("griddata")]
     //[AllowAnonymous]
     [Authorize]
-    public IEnumerable<DataGridData> GetData()
+    public async Task<ActionResult<DataGridResponse>> GetData()
     {
-        
-        return Enumerable.Range(1, 5).Select(index => new DataGridData()
-            {
-                Id = index,
-                Title = $"title{index}"
-            })
-            .ToArray();
+        var res = new DataGridResponse();
+
+        await RunInCatch<DataGridResponseDto>(res, () =>
+        {
+            res.GridData = Enumerable.Range(1, 5).Select(index => new DataGridData()
+                {
+                    Id = index,
+                    Title = $"title{index}"
+                })
+                .ToArray();
+            return Task.CompletedTask;
+        });
+
+        return Ok(res);
     }
 
     [HttpGet]
Index: src/JMCore.Blazor/Models/ClaimRecord.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/JMCore.Blazor/Models/ClaimRecord.cs b/src/JMCore.Blazor/Models/ClaimRecord.cs
new file mode 100644
--- /dev/null	(date 1691648082960)
+++ b/src/JMCore.Blazor/Models/ClaimRecord.cs	(date 1691648082960)
@@ -0,0 +1,3 @@
+namespace JMCore.Blazor;
+
+public record ClaimRecord(string Type, object Value);
\ No newline at end of file
Index: testUI/WASM/Startup.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using JMCore.Blazor.Config;\r\nusing JMCore.Blazor.Server;\r\nusing JMCoreTest.Blazor.ServerShared;\r\n\r\nnamespace JMCoreTest.Blazor.ServerWASM;\r\n\r\npublic class Startup\r\n{\r\n    private ConfigureServerBuilder ConfigServerBuilder { get; }\r\n    private IConfiguration config;\r\n    public Startup(IConfiguration configuration, IWebHostEnvironment env)\r\n    {\r\n        config = configuration;\r\n        ConfigServerBuilder = new ConfigureServerBuilder(configuration, env, HybridTypeEnum.WebAssembly)\r\n            .SetDb((o) =>\r\n            {\r\n                o.LanguageStructure = true;\r\n            })\r\n            .SetLocalization()\r\n            .SetAuthentication();\r\n    }\r\n\r\n    public void ConfigureServices(IServiceCollection services)\r\n    {\r\n        StartupServer.ConfigureServerServices(services, ConfigServerBuilder);\r\n    }\r\n\r\n    public void Configure(IApplicationBuilder app, IWebHostEnvironment env)\r\n    {\r\n        StartupServer.ConfigureServer(app, env, ConfigServerBuilder);\r\n        app.UseEndpoints(endpoints =>\r\n        {\r\n            endpoints.MapBffManagementEndpoints();\r\n            endpoints.MapRazorPages();\r\n            endpoints.MapControllers().RequireAuthorization().AsBffApiEndpoint();\r\n            // endpoints.MapHub<EchoHub>(\"/echohub\");\r\n            endpoints.MapFallbackToFile(\"index.html\");\r\n        });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/testUI/WASM/Startup.cs b/testUI/WASM/Startup.cs
--- a/testUI/WASM/Startup.cs	(revision 3993df6209af93a4a3cea57810ccb8f9ebc84b3a)
+++ b/testUI/WASM/Startup.cs	(date 1691647578703)
@@ -7,10 +7,9 @@
 public class Startup
 {
     private ConfigureServerBuilder ConfigServerBuilder { get; }
-    private IConfiguration config;
+
     public Startup(IConfiguration configuration, IWebHostEnvironment env)
     {
-        config = configuration;
         ConfigServerBuilder = new ConfigureServerBuilder(configuration, env, HybridTypeEnum.WebAssembly)
             .SetDb((o) =>
             {
Index: src/JMCore.Blazor.Client/BFF/BffAuthenticationStateProvider.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System.Net;\r\nusing System.Net.Http.Json;\r\nusing System.Security.Claims;\r\nusing Microsoft.AspNetCore.Components.Authorization;\r\nusing Microsoft.Extensions.Logging;\r\n\r\nnamespace JMCore.Blazor.Client.BFF;\r\n\r\npublic class BffAuthenticationStateProvider : AuthenticationStateProvider\r\n{\r\n    private static readonly TimeSpan UserCacheRefreshInterval = TimeSpan.FromSeconds(60);\r\n\r\n    private readonly HttpClient _client;\r\n    private readonly ILogger<BffAuthenticationStateProvider> _logger;\r\n\r\n    private DateTimeOffset _userLastCheck = DateTimeOffset.FromUnixTimeSeconds(0);\r\n    private ClaimsPrincipal _cachedUser = new(new ClaimsIdentity());\r\n\r\n    public BffAuthenticationStateProvider(\r\n        HttpClient client,\r\n        ILogger<BffAuthenticationStateProvider> logger)\r\n    {\r\n        _client = client;\r\n        _logger = logger;\r\n    }\r\n\r\n    public override async Task<AuthenticationState> GetAuthenticationStateAsync()\r\n    {\r\n        var user = await GetUser();\r\n        var state = new AuthenticationState(user);\r\n\r\n        // checks periodically for a session state change and fires event\r\n        // this causes a round trip to the server\r\n        // adjust the period accordingly if that feature is needed\r\n        if (user.Identity.IsAuthenticated)\r\n        {\r\n            _logger.LogInformation(\"starting background check..\");\r\n            Timer? timer = null;\r\n            \r\n            timer = new Timer(async _ =>\r\n            {\r\n                var currentUser = await GetUser(false);\r\n                if (currentUser.Identity.IsAuthenticated == false)\r\n                {\r\n                    _logger.LogInformation(\"user logged out\");\r\n                    NotifyAuthenticationStateChanged(Task.FromResult(new AuthenticationState(currentUser)));\r\n                    await timer.DisposeAsync();\r\n                }\r\n            }, null, 1000, 5000);\r\n        }\r\n\r\n        return state;\r\n    }\r\n\r\n    private async ValueTask<ClaimsPrincipal> GetUser(bool useCache = true)\r\n    {\r\n        var now = DateTimeOffset.Now;\r\n        if (useCache && now < _userLastCheck + UserCacheRefreshInterval)\r\n        {\r\n            _logger.LogDebug(\"Taking user from cache\");\r\n            return _cachedUser;\r\n        }\r\n\r\n        _logger.LogDebug(\"Fetching user\");\r\n        _cachedUser = await FetchUser();\r\n        _userLastCheck = now;\r\n\r\n        return _cachedUser;\r\n    }\r\n\r\n    record ClaimRecord(string Type, object Value);\r\n\r\n    private async Task<ClaimsPrincipal> FetchUser()\r\n    {\r\n        try\r\n        {\r\n            _logger.LogInformation(\"Fetching user information.\");\r\n            var response = await _client.GetAsync(\"bff/user?slide=false\");\r\n\r\n            if (response.StatusCode == HttpStatusCode.OK)\r\n            {\r\n                try\r\n                {\r\n                    var claims = await response.Content.ReadFromJsonAsync<List<ClaimRecord>>();\r\n                    var identity = new ClaimsIdentity(\r\n                        nameof(BffAuthenticationStateProvider),\r\n                        \"name\",\r\n                        \"role\");\r\n\r\n                    foreach (var claim in claims)\r\n                    {\r\n                        identity.AddClaim(new Claim(claim.Type, claim.Value.ToString()));\r\n                    }\r\n\r\n                    return new ClaimsPrincipal(identity);\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                   var textResponse = await response.Content.ReadAsStringAsync();\r\n                   _logger.LogError(ex,$\"Fetching user information cannot be read.{textResponse}\");\r\n                }\r\n            }\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            _logger.LogWarning(ex, \"Fetching user failed.\");\r\n        }\r\n\r\n        return new ClaimsPrincipal(new ClaimsIdentity());\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/JMCore.Blazor.Client/BFF/BffAuthenticationStateProvider.cs b/src/JMCore.Blazor.Client/BFF/BffAuthenticationStateProvider.cs
--- a/src/JMCore.Blazor.Client/BFF/BffAuthenticationStateProvider.cs	(revision 3993df6209af93a4a3cea57810ccb8f9ebc84b3a)
+++ b/src/JMCore.Blazor.Client/BFF/BffAuthenticationStateProvider.cs	(date 1691649084178)
@@ -15,7 +15,7 @@
 
     private DateTimeOffset _userLastCheck = DateTimeOffset.FromUnixTimeSeconds(0);
     private ClaimsPrincipal _cachedUser = new(new ClaimsIdentity());
-
+    
     public BffAuthenticationStateProvider(
         HttpClient client,
         ILogger<BffAuthenticationStateProvider> logger)
@@ -27,27 +27,32 @@
     public override async Task<AuthenticationState> GetAuthenticationStateAsync()
     {
         var user = await GetUser();
+        if (user.Identity == null)
+            throw new ArgumentNullException(nameof(user), "User has not set identity.");
+
         var state = new AuthenticationState(user);
 
+        
         // checks periodically for a session state change and fires event
         // this causes a round trip to the server
         // adjust the period accordingly if that feature is needed
-        if (user.Identity.IsAuthenticated)
-        {
-            _logger.LogInformation("starting background check..");
-            Timer? timer = null;
+        if (!user.Identity.IsAuthenticated) 
+            return state;
+        
+        _logger.LogInformation("starting background check..");
+        Timer? timer = null;
             
-            timer = new Timer(async _ =>
-            {
-                var currentUser = await GetUser(false);
-                if (currentUser.Identity.IsAuthenticated == false)
-                {
-                    _logger.LogInformation("user logged out");
-                    NotifyAuthenticationStateChanged(Task.FromResult(new AuthenticationState(currentUser)));
-                    await timer.DisposeAsync();
-                }
-            }, null, 1000, 5000);
-        }
+        timer = new Timer(async _ =>
+        {
+            var currentUser = await GetUser(false);
+            if (currentUser.Identity?.IsAuthenticated != false)
+                return;
+            
+            _logger.LogInformation("user logged out");
+            NotifyAuthenticationStateChanged(Task.FromResult(new AuthenticationState(currentUser)));
+            await timer.DisposeAsync();
+            
+        }, null, 1000, 5000);
 
         return state;
     }
@@ -67,9 +72,7 @@
 
         return _cachedUser;
     }
-
-    record ClaimRecord(string Type, object Value);
-
+    
     private async Task<ClaimsPrincipal> FetchUser()
     {
         try
@@ -87,9 +90,12 @@
                         "name",
                         "role");
 
+                    if (claims == null)
+                        throw new ArgumentNullException(nameof(claims),"Claim for user cannot be read.");
+                    
                     foreach (var claim in claims)
                     {
-                        identity.AddClaim(new Claim(claim.Type, claim.Value.ToString()));
+                        identity.AddClaim(new Claim(claim.Type, claim.Value.ToString()!));
                     }
 
                     return new ClaimsPrincipal(identity);
Index: testUI/ServerShared/ApiControllers/AccountController.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/testUI/ServerShared/ApiControllers/AccountController.cs b/testUI/ServerShared/ApiControllers/AccountController.cs
new file mode 100644
--- /dev/null	(date 1691649407329)
+++ b/testUI/ServerShared/ApiControllers/AccountController.cs	(date 1691649407329)
@@ -0,0 +1,6 @@
+namespace JMCoreTest.Blazor.ServerShared.ApiControllers;
+
+public class AccountController
+{
+    
+}
\ No newline at end of file
Index: testUI/Client/TestAuthenticationStateProvider.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/testUI/Client/TestAuthenticationStateProvider.cs b/testUI/Client/TestAuthenticationStateProvider.cs
new file mode 100644
--- /dev/null	(date 1691651704138)
+++ b/testUI/Client/TestAuthenticationStateProvider.cs	(date 1691651704138)
@@ -0,0 +1,11 @@
+// using Microsoft.AspNetCore.Components.Authorization;
+//
+// namespace JMCoreTest.Blazor.Client;
+//
+// public class TestAuthenticationStateProvider :  AuthenticationStateProvider
+// {
+//     public override Task<AuthenticationState> GetAuthenticationStateAsync()
+//     {
+//         throw new NotImplementedException();
+//     }
+// }
\ No newline at end of file
Index: src/JMCore.Blazor.Client/JMCore.Blazor.Client.csproj.DotSettings
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/JMCore.Blazor.Client/JMCore.Blazor.Client.csproj.DotSettings b/src/JMCore.Blazor.Client/JMCore.Blazor.Client.csproj.DotSettings
new file mode 100644
--- /dev/null	(date 1691648552607)
+++ b/src/JMCore.Blazor.Client/JMCore.Blazor.Client.csproj.DotSettings	(date 1691648552607)
@@ -0,0 +1,2 @@
+<wpf:ResourceDictionary xml:space="preserve" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:ss="urn:shemas-jetbrains-com:settings-storage-xaml" xmlns:wpf="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
+	<s:String x:Key="/Default/CodeEditing/Localization/Localizable/@EntryValue">No</s:String></wpf:ResourceDictionary>
\ No newline at end of file
